name: Golang build

on:
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
  push:
    branches:
      - '**'

# These variables can be reused in the build steps
env:
  DOCKER_REPOSITORY: aernouthoebreckx # TODO: FILL IN YOUR OWN REPOSITORY NAME (RedHat Account Name)
  DOCKER_IMAGE: aelm-workshop-23 # You can choose to change this to whatever you want
  GOLANG_VERSION: 1.21.x

jobs:
  # Build Job that will do everything to create the Golang binaryw
  build:
    runs-on: ubuntu-latest
    # Code Build steps
    steps:
      # Checks out the git repository into the agent
      - uses: actions/checkout@v4

      # Installs golang SDK in the agent
      - name: Setup Go ${{ env.GOLANG_VERSION }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GOLANG_VERSION }}

      # Executes the go build command 
      - name: Build
        # -o = output directory
        # -v = verbose
        # ./... = recursively include all source files in current directory and subdirectories
        run: go build -o ../bin/workshop -v ./...
        working-directory: workshop-service

      # Upload the workshop binary as GitHub artifact
      - name: Upload /bin folder as artifact
        uses: actions/upload-artifact@v3
        with:
          name: workshop
          path: bin/
          retention-days: 1

  # Docker job that will include the Golang binary in a Docker Image
  docker:
    # Dependency on previous step to complete
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Downloads the artifacts from previous jobs
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: workshop
          path: ./bin
      
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: .

      # Docker container steps
      - name: Login to Quay
        uses: docker/login-action@v3
        with:
          username: ${{secrets.QUAY_USERNAME}}
          password: ${{secrets.QUAY_PASSWORD}}

      - name: Extract metadata (tags, labels) for Docker
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{env.DOCKER_REPOSITORY}}/${{env.DOCKER_IMAGE}}
  
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}